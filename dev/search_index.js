var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = SyntaxInterface","category":"page"},{"location":"#SyntaxInterface","page":"Home","title":"SyntaxInterface","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for SyntaxInterface.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [SyntaxInterface]","category":"page"},{"location":"#SyntaxInterface.arguments","page":"Home","title":"SyntaxInterface.arguments","text":"arguments(x)\n\nIf x is a term as defined by istree(x), arguments(x) returns the arguments of x. \n\noperation(x)(arguments(x)...) should produce a node equivalent to x.\n\n\n\n\n\n","category":"function"},{"location":"#SyntaxInterface.arity-Tuple{Any}","page":"Home","title":"SyntaxInterface.arity","text":"arity(x)\n\nReturns the number of arguments of x. Implicitly defined if arguments(x) is defined.\n\n\n\n\n\n","category":"method"},{"location":"#SyntaxInterface.is_operation-Tuple{Any}","page":"Home","title":"SyntaxInterface.is_operation","text":"is_operation(f)\n\nReturns a single argument anonymous function predicate, that returns true if and only if the argument to the predicate satisfies istree and operation(x) == f \n\n\n\n\n\n","category":"method"},{"location":"#SyntaxInterface.istree-Tuple{Any}","page":"Home","title":"SyntaxInterface.istree","text":"istree(x)\n\nReturns true if x is a term. If true, operation, arguments must also be defined for x appropriately.\n\n\n\n\n\n","category":"method"},{"location":"#SyntaxInterface.node_count-Tuple{Any}","page":"Home","title":"SyntaxInterface.node_count","text":"node_count(t)\n\nCount the nodes in a symbolic expression tree satisfying istree and arguments.\n\n\n\n\n\n","category":"method"},{"location":"#SyntaxInterface.operation","page":"Home","title":"SyntaxInterface.operation","text":"operation(x)\n\nIf x is a term as defined by istree(x), operation(x) returns the head of x. \n\noperation(x)(arguments(x)...) should produce a node equivalent to x.\n\n\n\n\n\n","category":"function"},{"location":"#SyntaxInterface.similarterm-Tuple{Any, Any, Any}","page":"Home","title":"SyntaxInterface.similarterm","text":"similarterm(x::T, head, args)\n\nReturns a term that is in the same closure of nodes with type T, with head as the head and args as the arguments. By default this will execute head(args...).\n\nDo not overload directly, overload similarterm(::Type{<:T}, ...) instead.\n\n\n\n\n\n","category":"method"},{"location":"#SyntaxInterface.similarterm-Union{Tuple{T}, Tuple{Type{T}, Any, Any}} where T","page":"Home","title":"SyntaxInterface.similarterm","text":"similarterm(::Type{T}, head, args)\n\nReturns a term that is in the same closure of nodes with type T, with head as the head and args as the arguments. By default this will execute head(args...).\n\n\n\n\n\n","category":"method"}]
}
